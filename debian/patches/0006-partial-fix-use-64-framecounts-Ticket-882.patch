From: Ichthyostega <prg@ichthyostega.de>
Date: Sat, 9 Nov 2013 02:35:18 +0100
Subject: partial fix: use 64 framecounts (Ticket #882)

This is a partial and preliminary fix; we had an occasional
numeric overflow on 32bit platforms in some tests.

The complete fix will be to introduce a typedef and then
rework the relevant APIs (which are preliminary anyway,
thus no urge right now)
---
 src/lib/time/digxel.hpp                  |    2 +-
 tests/library/time/time-formats-test.cpp |    4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/lib/time/digxel.hpp b/src/lib/time/digxel.hpp
index 964985c..8237d95 100644
--- a/src/lib/time/digxel.hpp
+++ b/src/lib/time/digxel.hpp
@@ -317,7 +317,7 @@ namespace time {
   typedef Digxel< int, digxel::SexaFormatter> SexaDigit;  ///< for displaying time components (sexagesimal)
   typedef Digxel<uint, digxel::HexaFormatter> HexaDigit;  ///< for displaying a hex byte
   typedef Digxel< int, digxel::HourFormatter> HourDigit;  ///< for displaying hours in H:M.S
-  typedef Digxel<long, digxel::CountFormatter> CountVal;  ///< for displaying a counter      ///////////TICKET #882 : outch!
+  typedef Digxel<int64_t, digxel::CountFormatter> CountVal;  ///< for displaying a counter      ///////////TICKET #882 : should better use a typedef for frame counts
   
   
   /** special Digxel to show a sign.
diff --git a/tests/library/time/time-formats-test.cpp b/tests/library/time/time-formats-test.cpp
index fef32a2..1b9d231 100644
--- a/tests/library/time/time-formats-test.cpp
+++ b/tests/library/time/time-formats-test.cpp
@@ -52,12 +52,12 @@ namespace test{
   using format::Smpte;
   
   namespace{
-    const int MAX_FRAME = 265*24*60*60*25;
+    const int64_t MAX_FRAME = 265*24*60*60*25;
     
     string
     generateRandomFrameNr()
     {
-      uint frameNr(0);
+      int64_t frameNr(0);                               /////////TICKET #882 : better use a typedef for frame counts 
       while (!frameNr)
         frameNr = rand() % (2*MAX_FRAME) - MAX_FRAME;
       
